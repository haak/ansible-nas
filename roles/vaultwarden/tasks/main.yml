---
# tasks file for vaultwarden
- name: Create vaultwarden Directories
  file:
    path: "{{ item }}"
    state: directory
    mode: 0777
  with_items:
    - "{{ vaultwarden_data_directory }}/data"


- name: Create vaultwarden container
  docker_container:
    name: vaultwarden
    image: vaultwarden/server:latest
    pull: true
    state: started
    volumes:
      - "{{ vaultwarden_data_directory }}/data/:/data/:rw"
    ports:
      - "{{ vaultwarden_port_a }}:80"
      - "{{ vaultwarden_port_b }}:9001"
    # labels:
    #   traefik.enable: "{{ vaultwarden_available_externally }}"
    #   traefik.http.routers.vaultwarden.rule: "Host(`{{ vaultwarden_hostname }}.{{ ansible_nas_domain }}`)"
    #   traefik.http.routers.vaultwarden.tls.certresolver: "letsencrypt"
    #   traefik.http.routers.vaultwarden.tls.domains[0].main: "{{ ansible_nas_domain }}"
    #   traefik.http.routers.vaultwarden.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
    #   traefik.http.routers.vaultwarden.service: "vaultwarden"
    #   traefik.http.routers.vaultwarden.middlewares: "vaultwarden-ipwhitelist@docker"
    #   traefik.http.services.vaultwarden.loadbalancer.server.port: "80"
    #   traefik.http.routers.vaultwarden-ws.rule: "Host(`{{ vaultwarden_hostname }}.{{ ansible_nas_domain }}`) && Path(`/notifications/hub`)"
    #   traefik.http.routers.vaultwarden-ws.tls.certresolver: "letsencrypt"
    #   traefik.http.routers.vaultwarden-ws.tls.domains[0].main: "{{ ansible_nas_domain }}"
    #   traefik.http.routers.vaultwarden-ws.tls.domains[0].sans: "*.{{ ansible_nas_domain }}"
    #   traefik.http.routers.vaultwarden-ws.service: "vaultwarden-ws"
    #   traefik.http.routers.vaultwarden-ws.middlewares: "vaultwarden-ipwhitelist@docker"
    #   traefik.http.services.vaultwarden-ws.loadbalancer.server.port: "3012"
    #   traefik.http.middlewares.vaultwarden-ipwhitelist.ipwhitelist.sourcerange: "{{ vaultwarden_ip_whitelist }}"
    # labels:
    #   traefik.enable: "true"
    #   traefik.docker.network: "traefik"
    #   traefik.http.middlewares.redirect-https.redirectScheme.scheme: "https"
    #   traefik.http.middlewares.redirect-https.redirectScheme.permanent: "true"
    #   traefik.http.routers.bitwarden-ui-https.rule: "Host(`bitwarden.web.haak.pw`)"
    #   traefik.http.routers.bitwarden-ui-https.entrypoints: "websecure"
    #   traefik.http.routers.bitwarden-ui-https.tls: "true"
    #   traefik.http.routers.bitwarden-ui-https.service: "bitwarden-ui"
    #   traefik.http.routers.bitwarden-ui-http.rule: "Host(`bitwarden.web.haak.pw`)"
    #   traefik.http.routers.bitwarden-ui-http.entrypoints: "web"
    #   traefik.http.routers.bitwarden-ui-http.middlewares: "redirect-https"
    #   traefik.http.routers.bitwarden-ui-http.service: "bitwarden-ui"
    #   traefik.http.services.bitwarden-ui.loadbalancer.server.port: "80"
    #   traefik.http.routers.bitwarden-websocket-https.rule: "Host(`bitwarden.web.haak.pw`) && Path(`/notifications/hub`)"
    #   traefik.http.routers.bitwarden-websocket-https.entrypoints: "websecure"
    #   traefik.http.routers.bitwarden-websocket-https.tls: "true"
    #   traefik.http.routers.bitwarden-websocket-https.service: "bitwarden-websocket"
    #   traefik.http.routers.bitwarden-websocket-http.rule: "Host(`bitwarden.web.haak.pw`) && Path(`/notifications/hub`)"
    #   traefik.http.routers.bitwarden-websocket-http.entrypoints: "web"
    #   traefik.http.routers.bitwarden-websocket-http.middlewares: "redirect-https"
    #   traefik.http.routers.bitwarden-websocket-http.service: "bitwarden-websocket"
    #   traefik.http.services.bitwarden-websocket.loadbalancer.server.port: "3012"
    restart_policy: unless-stopped
